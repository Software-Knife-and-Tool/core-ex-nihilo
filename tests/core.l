`123
`,123
`,(fixnum+ 1 2)
`(a (fixnum+ 1 2) c)
`(a ,(fixnum+ 1 2) c)
`(a (list 1 2) c)
`(a ,(list 1 2) c)
`(a ,@(list 1 2) c)
(functionp acons)
(functionp assq)
(functionp butlast)
(functionp last)
(functionp pairlis)
(functionp fmt)
(functionp room)
(functionp string=)
(functionp string)
(parse-lambda ())
(parse-lambda '(a b c))
(parse-lambda '(a b c :option d e))
(parse-lambda '(a b c :option d (e 1)))
(parse-lambda '(a b c :option e f :rest rest))
(parse-lambda '(a b c :option e (f 5) :rest rest))
(parse-lambda '(:option a b))
(parse-lambda '(:option a (b 1)))
(parse-lambda '(:option a b :rest rest))
(parse-lambda '(:option a (b 1) :rest rest))
(parse-lambda '(:rest a))
(defstruct test (a 0 :fixnum) (b 1 :fixnum))
(string= "123" "123")
(string= "123" "abc")
(null (macro-function 'defstruct))
(null (macro-function 'letrec))
(null (macro-function 'time))
(null (macro-function 'typecase))
(null (macro-function 'with-ns))
(while :nil :t)
