`123;123
`,123;123
`,(fixnum+ 1 2);3
`(a (fixnum+ 1 2) c);(a (fixnum+ 1 2) c)
`(a ,(fixnum+ 1 2) c);(a 3 c)
`(a (list 1 2) c);(a (list 1 2) c)
`(a ,(list 1 2) c);(a (1 2) c)
`(a ,@(list 1 2) c);(a 1 2 c)
(functionp fmt);:t
(functionp room);:t
(functionp string=);:t
(functionp string);:t
(parse-lambda '(a b c));((a b c) :nil :nil :nil)
(parse-lambda '(a b c :option d e));((a b c) ((d :nil) (e :nil)) :nil :nil)
(parse-lambda '(a b c :option d (e 1)));((a b c) ((d :nil) (e 1)) :nil :nil)
(parse-lambda '(a b c :option e f :rest rest));((a b c) ((e :nil) (f :nil)) :nil rest)
(parse-lambda '(a b c :option e (f 5) :rest rest));((a b c) ((e :nil) (f 5)) :nil rest)
(parse-lambda '(:option a b));(:nil ((a :nil) (b :nil)) :nil :nil)
(parse-lambda '(:option a (b 1)));(:nil ((a :nil) (b 1)) :nil :nil)
(parse-lambda '(:option a b :rest rest));(:nil ((a :nil) (b :nil)) :nil rest)
(parse-lambda '(:option a (b 1) :rest rest));(:nil ((a :nil) (b 1)) :nil rest)
(parse-lambda '(:rest a));(:nil :nil :nil a)
(defstruct test (a 0 :fixnum) (b 1 :fixnum));test
(string= "123" "123");:t
(string= "123" "abc");:nil
(null (macro-function 'defstruct));:nil
(null (macro-function 'letrec));:nil
(null (macro-function 'time));:nil
(null (macro-function 'typecase));:nil
(null (macro-function 'with-ns));:nil
(while :nil :t);:nil