#-*- mode: org -*-
#+STARTUP: showall

* ALC - A Lisp Compiler
  This project is a multi-pass machine-code compiler for Gyre.
  + output format? LLVM?
* ALC Architecture
  This compiler is composed libraries, structured as a number of passes.
  1. system interface (compiler.l)
  2. AST (compiler/ast)
     + mostly done by compiler reader
     + (ast (lex sexpr))
     + convert sexpr to AST
     + replace all nodes with (sexpr . :type)
  3. Optimizer (compiler/opt)
     + (opt (ast (lex seexpr)))
     + constant folding
  4. Gyre language semantics
     + special forms
  5. Code emitter (compiler/emit)
     + write machine code output file
 * ALC Sources
   1. system integratiom
      + lib.l - system integration
   2. code generation
      + codegen-x64.l
      + x86-ops.l
      + primitives-x64.l
   3. constant folding, strength reduction
      + llopt.l
      + reduce.l
      + rewrite.l
   4. compiler
      + compiler.l
      + function.l
      + lambda.l
      + llc.l
      + read.l
      + special.l

