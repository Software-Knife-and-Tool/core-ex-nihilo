(:defsym alist '((a . 0) (b . 1) (c . 2) (d . 3) (e . 4) (f . 5) (g . 6) (h . 7) (i . 8) (j . 9)))
(:defsym avect #(:t (a . 0) (b . 1) (c . 2) (d . 3) (e . 4) (f . 5) (g . 6) (h . 7) (i . 8) (j . 9)))

(:defsym blist '(a b c d e f g h i j))
(:defsym clist '(a b c d e f g h i z))

(fmt :t "~A ;;; core.acons~%" (perf-time (acons 'z 10 alist)))
;;; (fmt :t "~A ;;; core.assq~%" (perf-time (assq 'j alist)))
(fmt :t "~A ;;; core.constantp~%" (perf-time (constantp 1)))
;;; (fmt :t "~A ;;; core.pairlis~%" (perf-time (pairlis '(a b c d e f g h i j) '(0 1 2 3 4 5 6 7 8 9))))
(fmt :t "~A ;;; core.eql~%" (perf-time (eql blist clist)))
(fmt :t "~A ;;; core.pairp~%" (perf-time (pairp '(0 . 1))))
(fmt :t "~A ;;; core.schar~%" (perf-time (schar "0123456" 5)))
(fmt :t "~A ;;; core.sequencep~%" (perf-time (sequencep alist)))
(fmt :t "~A ;;; core.string=~%" (perf-time (string= "123456789" "0123456789")))
(fmt :t "~A ;;; core.stringp~%" (perf-time (stringp "")))
(fmt :t "~A ;;; core.vector~%" (perf-time (vector :t 0 1 2 3 4 5 6 7 8 9)))
(fmt :t "~A ;;; core.vector-to-list~%" (perf-time (vector-to-list avect)))
